/*
 * AdExchangeBuyerAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.googleapis.www.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class Account 
        extends java.util.Observable
        implements java.io.Serializable {
    private static final long serialVersionUID = 5090504891364590592L;
    private List<BidderLocation> bidderLocation;
    private String cookieMatchingNid;
    private String cookieMatchingUrl;
    private Integer id;
    private String kind = "adexchangebuyer#account";
    private Integer maximumActiveCreatives;
    private Integer maximumTotalQps;
    private Integer numberActiveCreatives;
    /** GETTER
     * Your bidder locations that have distinct URLs.
     */
    @JsonGetter("bidderLocation")
    public List<BidderLocation> getBidderLocation ( ) { 
        return this.bidderLocation;
    }
    
    /** SETTER
     * Your bidder locations that have distinct URLs.
     */
    @JsonSetter("bidderLocation")
    public void setBidderLocation (List<BidderLocation> value) { 
        this.bidderLocation = value;
        notifyObservers(this.bidderLocation);
    }
 
    /** GETTER
     * The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this.
     */
    @JsonGetter("cookieMatchingNid")
    public String getCookieMatchingNid ( ) { 
        return this.cookieMatchingNid;
    }
    
    /** SETTER
     * The nid parameter value used in cookie match requests. Please contact your technical account manager if you need to change this.
     */
    @JsonSetter("cookieMatchingNid")
    public void setCookieMatchingNid (String value) { 
        this.cookieMatchingNid = value;
        notifyObservers(this.cookieMatchingNid);
    }
 
    /** GETTER
     * The base URL used in cookie match requests.
     */
    @JsonGetter("cookieMatchingUrl")
    public String getCookieMatchingUrl ( ) { 
        return this.cookieMatchingUrl;
    }
    
    /** SETTER
     * The base URL used in cookie match requests.
     */
    @JsonSetter("cookieMatchingUrl")
    public void setCookieMatchingUrl (String value) { 
        this.cookieMatchingUrl = value;
        notifyObservers(this.cookieMatchingUrl);
    }
 
    /** GETTER
     * Account id.
     */
    @JsonGetter("id")
    public Integer getId ( ) { 
        return this.id;
    }
    
    /** SETTER
     * Account id.
     */
    @JsonSetter("id")
    public void setId (Integer value) { 
        this.id = value;
        notifyObservers(this.id);
    }
 
    /** GETTER
     * Resource type.
     */
    @JsonGetter("kind")
    public String getKind ( ) { 
        return this.kind;
    }
    
    /** SETTER
     * Resource type.
     */
    @JsonSetter("kind")
    public void setKind (String value) { 
        this.kind = value;
        notifyObservers(this.kind);
    }
 
    /** GETTER
     * The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this.
     */
    @JsonGetter("maximumActiveCreatives")
    public Integer getMaximumActiveCreatives ( ) { 
        return this.maximumActiveCreatives;
    }
    
    /** SETTER
     * The maximum number of active creatives that an account can have, where a creative is active if it was inserted or bid with in the last 30 days. Please contact your technical account manager if you need to change this.
     */
    @JsonSetter("maximumActiveCreatives")
    public void setMaximumActiveCreatives (Integer value) { 
        this.maximumActiveCreatives = value;
        notifyObservers(this.maximumActiveCreatives);
    }
 
    /** GETTER
     * The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this.
     */
    @JsonGetter("maximumTotalQps")
    public Integer getMaximumTotalQps ( ) { 
        return this.maximumTotalQps;
    }
    
    /** SETTER
     * The sum of all bidderLocation.maximumQps values cannot exceed this. Please contact your technical account manager if you need to change this.
     */
    @JsonSetter("maximumTotalQps")
    public void setMaximumTotalQps (Integer value) { 
        this.maximumTotalQps = value;
        notifyObservers(this.maximumTotalQps);
    }
 
    /** GETTER
     * The number of creatives that this account inserted or bid with in the last 30 days.
     */
    @JsonGetter("numberActiveCreatives")
    public Integer getNumberActiveCreatives ( ) { 
        return this.numberActiveCreatives;
    }
    
    /** SETTER
     * The number of creatives that this account inserted or bid with in the last 30 days.
     */
    @JsonSetter("numberActiveCreatives")
    public void setNumberActiveCreatives (Integer value) { 
        this.numberActiveCreatives = value;
        notifyObservers(this.numberActiveCreatives);
    }
 
}
 