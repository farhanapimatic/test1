/*
 * AdExchangeBuyerAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.googleapis.www.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class PretargetingConfig 
        extends java.util.Observable
        implements java.io.Serializable {
    private static final long serialVersionUID = 5318985595759711906L;
    private String billingId;
    private String configId;
    private String configName;
    private List<String> creativeType;
    private List<Dimension> dimensions;
    private List<String> excludedContentLabels;
    private List<String> excludedGeoCriteriaIds;
    private List<ExcludedPlacement> excludedPlacements;
    private List<String> excludedUserLists;
    private List<String> excludedVerticals;
    private List<String> geoCriteriaIds;
    private Boolean isActive;
    private String kind = "adexchangebuyer#pretargetingConfig";
    private List<String> languages;
    private List<String> mobileCarriers;
    private List<String> mobileDevices;
    private List<String> mobileOperatingSystemVersions;
    private List<Placement> placements;
    private List<String> platforms;
    private List<String> supportedCreativeAttributes;
    private List<String> userLists;
    private List<String> vendorTypes;
    private List<String> verticals;
    /** GETTER
     * The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.
     */
    @JsonGetter("billingId")
    public String getBillingId ( ) { 
        return this.billingId;
    }
    
    /** SETTER
     * The id for billing purposes, provided for reference. Leave this field blank for insert requests; the id will be generated automatically.
     */
    @JsonSetter("billingId")
    public void setBillingId (String value) { 
        this.billingId = value;
        notifyObservers(this.billingId);
    }
 
    /** GETTER
     * The config id; generated automatically. Leave this field blank for insert requests.
     */
    @JsonGetter("configId")
    public String getConfigId ( ) { 
        return this.configId;
    }
    
    /** SETTER
     * The config id; generated automatically. Leave this field blank for insert requests.
     */
    @JsonSetter("configId")
    public void setConfigId (String value) { 
        this.configId = value;
        notifyObservers(this.configId);
    }
 
    /** GETTER
     * The name of the config. Must be unique. Required for all requests.
     */
    @JsonGetter("configName")
    public String getConfigName ( ) { 
        return this.configName;
    }
    
    /** SETTER
     * The name of the config. Must be unique. Required for all requests.
     */
    @JsonSetter("configName")
    public void setConfigName (String value) { 
        this.configName = value;
        notifyObservers(this.configName);
    }
 
    /** GETTER
     * List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.
     */
    @JsonGetter("creativeType")
    public List<String> getCreativeType ( ) { 
        return this.creativeType;
    }
    
    /** SETTER
     * List must contain exactly one of PRETARGETING_CREATIVE_TYPE_HTML or PRETARGETING_CREATIVE_TYPE_VIDEO.
     */
    @JsonSetter("creativeType")
    public void setCreativeType (List<String> value) { 
        this.creativeType = value;
        notifyObservers(this.creativeType);
    }
 
    /** GETTER
     * Requests which allow one of these (width, height) pairs will match. All pairs must be supported ad dimensions.
     */
    @JsonGetter("dimensions")
    public List<Dimension> getDimensions ( ) { 
        return this.dimensions;
    }
    
    /** SETTER
     * Requests which allow one of these (width, height) pairs will match. All pairs must be supported ad dimensions.
     */
    @JsonSetter("dimensions")
    public void setDimensions (List<Dimension> value) { 
        this.dimensions = value;
        notifyObservers(this.dimensions);
    }
 
    /** GETTER
     * Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.
     */
    @JsonGetter("excludedContentLabels")
    public List<String> getExcludedContentLabels ( ) { 
        return this.excludedContentLabels;
    }
    
    /** SETTER
     * Requests with any of these content labels will not match. Values are from content-labels.txt in the downloadable files section.
     */
    @JsonSetter("excludedContentLabels")
    public void setExcludedContentLabels (List<String> value) { 
        this.excludedContentLabels = value;
        notifyObservers(this.excludedContentLabels);
    }
 
    /** GETTER
     * Requests containing any of these geo criteria ids will not match.
     */
    @JsonGetter("excludedGeoCriteriaIds")
    public List<String> getExcludedGeoCriteriaIds ( ) { 
        return this.excludedGeoCriteriaIds;
    }
    
    /** SETTER
     * Requests containing any of these geo criteria ids will not match.
     */
    @JsonSetter("excludedGeoCriteriaIds")
    public void setExcludedGeoCriteriaIds (List<String> value) { 
        this.excludedGeoCriteriaIds = value;
        notifyObservers(this.excludedGeoCriteriaIds);
    }
 
    /** GETTER
     * Requests containing any of these placements will not match.
     */
    @JsonGetter("excludedPlacements")
    public List<ExcludedPlacement> getExcludedPlacements ( ) { 
        return this.excludedPlacements;
    }
    
    /** SETTER
     * Requests containing any of these placements will not match.
     */
    @JsonSetter("excludedPlacements")
    public void setExcludedPlacements (List<ExcludedPlacement> value) { 
        this.excludedPlacements = value;
        notifyObservers(this.excludedPlacements);
    }
 
    /** GETTER
     * Requests containing any of these users list ids will not match.
     */
    @JsonGetter("excludedUserLists")
    public List<String> getExcludedUserLists ( ) { 
        return this.excludedUserLists;
    }
    
    /** SETTER
     * Requests containing any of these users list ids will not match.
     */
    @JsonSetter("excludedUserLists")
    public void setExcludedUserLists (List<String> value) { 
        this.excludedUserLists = value;
        notifyObservers(this.excludedUserLists);
    }
 
    /** GETTER
     * Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.
     */
    @JsonGetter("excludedVerticals")
    public List<String> getExcludedVerticals ( ) { 
        return this.excludedVerticals;
    }
    
    /** SETTER
     * Requests containing any of these vertical ids will not match. Values are from the publisher-verticals.txt file in the downloadable files section.
     */
    @JsonSetter("excludedVerticals")
    public void setExcludedVerticals (List<String> value) { 
        this.excludedVerticals = value;
        notifyObservers(this.excludedVerticals);
    }
 
    /** GETTER
     * Requests containing any of these geo criteria ids will match.
     */
    @JsonGetter("geoCriteriaIds")
    public List<String> getGeoCriteriaIds ( ) { 
        return this.geoCriteriaIds;
    }
    
    /** SETTER
     * Requests containing any of these geo criteria ids will match.
     */
    @JsonSetter("geoCriteriaIds")
    public void setGeoCriteriaIds (List<String> value) { 
        this.geoCriteriaIds = value;
        notifyObservers(this.geoCriteriaIds);
    }
 
    /** GETTER
     * Whether this config is active. Required for all requests.
     */
    @JsonGetter("isActive")
    public Boolean getIsActive ( ) { 
        return this.isActive;
    }
    
    /** SETTER
     * Whether this config is active. Required for all requests.
     */
    @JsonSetter("isActive")
    public void setIsActive (Boolean value) { 
        this.isActive = value;
        notifyObservers(this.isActive);
    }
 
    /** GETTER
     * The kind of the resource, i.e. "adexchangebuyer#pretargetingConfig".
     */
    @JsonGetter("kind")
    public String getKind ( ) { 
        return this.kind;
    }
    
    /** SETTER
     * The kind of the resource, i.e. "adexchangebuyer#pretargetingConfig".
     */
    @JsonSetter("kind")
    public void setKind (String value) { 
        this.kind = value;
        notifyObservers(this.kind);
    }
 
    /** GETTER
     * Request containing any of these language codes will match.
     */
    @JsonGetter("languages")
    public List<String> getLanguages ( ) { 
        return this.languages;
    }
    
    /** SETTER
     * Request containing any of these language codes will match.
     */
    @JsonSetter("languages")
    public void setLanguages (List<String> value) { 
        this.languages = value;
        notifyObservers(this.languages);
    }
 
    /** GETTER
     * Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.
     */
    @JsonGetter("mobileCarriers")
    public List<String> getMobileCarriers ( ) { 
        return this.mobileCarriers;
    }
    
    /** SETTER
     * Requests containing any of these mobile carrier ids will match. Values are from mobile-carriers.csv in the downloadable files section.
     */
    @JsonSetter("mobileCarriers")
    public void setMobileCarriers (List<String> value) { 
        this.mobileCarriers = value;
        notifyObservers(this.mobileCarriers);
    }
 
    /** GETTER
     * Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.
     */
    @JsonGetter("mobileDevices")
    public List<String> getMobileDevices ( ) { 
        return this.mobileDevices;
    }
    
    /** SETTER
     * Requests containing any of these mobile device ids will match. Values are from mobile-devices.csv in the downloadable files section.
     */
    @JsonSetter("mobileDevices")
    public void setMobileDevices (List<String> value) { 
        this.mobileDevices = value;
        notifyObservers(this.mobileDevices);
    }
 
    /** GETTER
     * Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.
     */
    @JsonGetter("mobileOperatingSystemVersions")
    public List<String> getMobileOperatingSystemVersions ( ) { 
        return this.mobileOperatingSystemVersions;
    }
    
    /** SETTER
     * Requests containing any of these mobile operating system version ids will match. Values are from mobile-os.csv in the downloadable files section.
     */
    @JsonSetter("mobileOperatingSystemVersions")
    public void setMobileOperatingSystemVersions (List<String> value) { 
        this.mobileOperatingSystemVersions = value;
        notifyObservers(this.mobileOperatingSystemVersions);
    }
 
    /** GETTER
     * Requests containing any of these placements will match.
     */
    @JsonGetter("placements")
    public List<Placement> getPlacements ( ) { 
        return this.placements;
    }
    
    /** SETTER
     * Requests containing any of these placements will match.
     */
    @JsonSetter("placements")
    public void setPlacements (List<Placement> value) { 
        this.placements = value;
        notifyObservers(this.placements);
    }
 
    /** GETTER
     * Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.
     */
    @JsonGetter("platforms")
    public List<String> getPlatforms ( ) { 
        return this.platforms;
    }
    
    /** SETTER
     * Requests matching any of these platforms will match. Possible values are PRETARGETING_PLATFORM_MOBILE, PRETARGETING_PLATFORM_DESKTOP, and PRETARGETING_PLATFORM_TABLET.
     */
    @JsonSetter("platforms")
    public void setPlatforms (List<String> value) { 
        this.platforms = value;
        notifyObservers(this.platforms);
    }
 
    /** GETTER
     * Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.
     */
    @JsonGetter("supportedCreativeAttributes")
    public List<String> getSupportedCreativeAttributes ( ) { 
        return this.supportedCreativeAttributes;
    }
    
    /** SETTER
     * Creative attributes should be declared here if all creatives corresponding to this pretargeting configuration have that creative attribute. Values are from pretargetable-creative-attributes.txt in the downloadable files section.
     */
    @JsonSetter("supportedCreativeAttributes")
    public void setSupportedCreativeAttributes (List<String> value) { 
        this.supportedCreativeAttributes = value;
        notifyObservers(this.supportedCreativeAttributes);
    }
 
    /** GETTER
     * Requests containing any of these user list ids will match.
     */
    @JsonGetter("userLists")
    public List<String> getUserLists ( ) { 
        return this.userLists;
    }
    
    /** SETTER
     * Requests containing any of these user list ids will match.
     */
    @JsonSetter("userLists")
    public void setUserLists (List<String> value) { 
        this.userLists = value;
        notifyObservers(this.userLists);
    }
 
    /** GETTER
     * Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.
     */
    @JsonGetter("vendorTypes")
    public List<String> getVendorTypes ( ) { 
        return this.vendorTypes;
    }
    
    /** SETTER
     * Requests that allow any of these vendor ids will match. Values are from vendors.txt in the downloadable files section.
     */
    @JsonSetter("vendorTypes")
    public void setVendorTypes (List<String> value) { 
        this.vendorTypes = value;
        notifyObservers(this.vendorTypes);
    }
 
    /** GETTER
     * Requests containing any of these vertical ids will match.
     */
    @JsonGetter("verticals")
    public List<String> getVerticals ( ) { 
        return this.verticals;
    }
    
    /** SETTER
     * Requests containing any of these vertical ids will match.
     */
    @JsonSetter("verticals")
    public void setVerticals (List<String> value) { 
        this.verticals = value;
        notifyObservers(this.verticals);
    }
 
}
 