/*
 * AdExchangeBuyerAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.googleapis.www.models;

import java.util.*;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

public class PerformanceReport 
        extends java.util.Observable
        implements java.io.Serializable {
    private static final long serialVersionUID = 5342915737400884824L;
    private Double bidRate;
    private Double bidRequestRate;
    private List<Object> calloutStatusRate;
    private List<Object> cookieMatcherStatusRate;
    private List<Object> creativeStatusRate;
    private Double filteredBidRate;
    private List<Object> hostedMatchStatusRate;
    private Double inventoryMatchRate;
    private String kind = "adexchangebuyer#performanceReport";
    private Double latency50thPercentile;
    private Double latency85thPercentile;
    private Double latency95thPercentile;
    private Double noQuotaInRegion;
    private Double outOfQuota;
    private Double pixelMatchRequests;
    private Double pixelMatchResponses;
    private Double quotaConfiguredLimit;
    private Double quotaThrottledLimit;
    private String region;
    private Double successfulRequestRate;
    private String timestamp;
    private Double unsuccessfulRequestRate;
    /** GETTER
     * The number of bid responses with an ad.
     */
    @JsonGetter("bidRate")
    public Double getBidRate ( ) { 
        return this.bidRate;
    }
    
    /** SETTER
     * The number of bid responses with an ad.
     */
    @JsonSetter("bidRate")
    public void setBidRate (Double value) { 
        this.bidRate = value;
        notifyObservers(this.bidRate);
    }
 
    /** GETTER
     * The number of bid requests sent to your bidder.
     */
    @JsonGetter("bidRequestRate")
    public Double getBidRequestRate ( ) { 
        return this.bidRequestRate;
    }
    
    /** SETTER
     * The number of bid requests sent to your bidder.
     */
    @JsonSetter("bidRequestRate")
    public void setBidRequestRate (Double value) { 
        this.bidRequestRate = value;
        notifyObservers(this.bidRequestRate);
    }
 
    /** GETTER
     * Rate of various prefiltering statuses per match. Please refer to the callout-status-codes.txt file for different statuses.
     */
    @JsonGetter("calloutStatusRate")
    public List<Object> getCalloutStatusRate ( ) { 
        return this.calloutStatusRate;
    }
    
    /** SETTER
     * Rate of various prefiltering statuses per match. Please refer to the callout-status-codes.txt file for different statuses.
     */
    @JsonSetter("calloutStatusRate")
    public void setCalloutStatusRate (List<Object> value) { 
        this.calloutStatusRate = value;
        notifyObservers(this.calloutStatusRate);
    }
 
    /** GETTER
     * Average QPS for cookie matcher operations.
     */
    @JsonGetter("cookieMatcherStatusRate")
    public List<Object> getCookieMatcherStatusRate ( ) { 
        return this.cookieMatcherStatusRate;
    }
    
    /** SETTER
     * Average QPS for cookie matcher operations.
     */
    @JsonSetter("cookieMatcherStatusRate")
    public void setCookieMatcherStatusRate (List<Object> value) { 
        this.cookieMatcherStatusRate = value;
        notifyObservers(this.cookieMatcherStatusRate);
    }
 
    /** GETTER
     * Rate of ads with a given status. Please refer to the creative-status-codes.txt file for different statuses.
     */
    @JsonGetter("creativeStatusRate")
    public List<Object> getCreativeStatusRate ( ) { 
        return this.creativeStatusRate;
    }
    
    /** SETTER
     * Rate of ads with a given status. Please refer to the creative-status-codes.txt file for different statuses.
     */
    @JsonSetter("creativeStatusRate")
    public void setCreativeStatusRate (List<Object> value) { 
        this.creativeStatusRate = value;
        notifyObservers(this.creativeStatusRate);
    }
 
    /** GETTER
     * The number of bid responses that were filtered due to a policy violation or other errors.
     */
    @JsonGetter("filteredBidRate")
    public Double getFilteredBidRate ( ) { 
        return this.filteredBidRate;
    }
    
    /** SETTER
     * The number of bid responses that were filtered due to a policy violation or other errors.
     */
    @JsonSetter("filteredBidRate")
    public void setFilteredBidRate (Double value) { 
        this.filteredBidRate = value;
        notifyObservers(this.filteredBidRate);
    }
 
    /** GETTER
     * Average QPS for hosted match operations.
     */
    @JsonGetter("hostedMatchStatusRate")
    public List<Object> getHostedMatchStatusRate ( ) { 
        return this.hostedMatchStatusRate;
    }
    
    /** SETTER
     * Average QPS for hosted match operations.
     */
    @JsonSetter("hostedMatchStatusRate")
    public void setHostedMatchStatusRate (List<Object> value) { 
        this.hostedMatchStatusRate = value;
        notifyObservers(this.hostedMatchStatusRate);
    }
 
    /** GETTER
     * The number of potential queries based on your pretargeting settings.
     */
    @JsonGetter("inventoryMatchRate")
    public Double getInventoryMatchRate ( ) { 
        return this.inventoryMatchRate;
    }
    
    /** SETTER
     * The number of potential queries based on your pretargeting settings.
     */
    @JsonSetter("inventoryMatchRate")
    public void setInventoryMatchRate (Double value) { 
        this.inventoryMatchRate = value;
        notifyObservers(this.inventoryMatchRate);
    }
 
    /** GETTER
     * Resource type.
     */
    @JsonGetter("kind")
    public String getKind ( ) { 
        return this.kind;
    }
    
    /** SETTER
     * Resource type.
     */
    @JsonSetter("kind")
    public void setKind (String value) { 
        this.kind = value;
        notifyObservers(this.kind);
    }
 
    /** GETTER
     * The 50th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
     */
    @JsonGetter("latency50thPercentile")
    public Double getLatency50thPercentile ( ) { 
        return this.latency50thPercentile;
    }
    
    /** SETTER
     * The 50th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
     */
    @JsonSetter("latency50thPercentile")
    public void setLatency50thPercentile (Double value) { 
        this.latency50thPercentile = value;
        notifyObservers(this.latency50thPercentile);
    }
 
    /** GETTER
     * The 85th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
     */
    @JsonGetter("latency85thPercentile")
    public Double getLatency85thPercentile ( ) { 
        return this.latency85thPercentile;
    }
    
    /** SETTER
     * The 85th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
     */
    @JsonSetter("latency85thPercentile")
    public void setLatency85thPercentile (Double value) { 
        this.latency85thPercentile = value;
        notifyObservers(this.latency85thPercentile);
    }
 
    /** GETTER
     * The 95th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
     */
    @JsonGetter("latency95thPercentile")
    public Double getLatency95thPercentile ( ) { 
        return this.latency95thPercentile;
    }
    
    /** SETTER
     * The 95th percentile round trip latency(ms) as perceived from Google servers for the duration period covered by the report.
     */
    @JsonSetter("latency95thPercentile")
    public void setLatency95thPercentile (Double value) { 
        this.latency95thPercentile = value;
        notifyObservers(this.latency95thPercentile);
    }
 
    /** GETTER
     * Rate of various quota account statuses per quota check.
     */
    @JsonGetter("noQuotaInRegion")
    public Double getNoQuotaInRegion ( ) { 
        return this.noQuotaInRegion;
    }
    
    /** SETTER
     * Rate of various quota account statuses per quota check.
     */
    @JsonSetter("noQuotaInRegion")
    public void setNoQuotaInRegion (Double value) { 
        this.noQuotaInRegion = value;
        notifyObservers(this.noQuotaInRegion);
    }
 
    /** GETTER
     * Rate of various quota account statuses per quota check.
     */
    @JsonGetter("outOfQuota")
    public Double getOutOfQuota ( ) { 
        return this.outOfQuota;
    }
    
    /** SETTER
     * Rate of various quota account statuses per quota check.
     */
    @JsonSetter("outOfQuota")
    public void setOutOfQuota (Double value) { 
        this.outOfQuota = value;
        notifyObservers(this.outOfQuota);
    }
 
    /** GETTER
     * Average QPS for pixel match requests from clients.
     */
    @JsonGetter("pixelMatchRequests")
    public Double getPixelMatchRequests ( ) { 
        return this.pixelMatchRequests;
    }
    
    /** SETTER
     * Average QPS for pixel match requests from clients.
     */
    @JsonSetter("pixelMatchRequests")
    public void setPixelMatchRequests (Double value) { 
        this.pixelMatchRequests = value;
        notifyObservers(this.pixelMatchRequests);
    }
 
    /** GETTER
     * Average QPS for pixel match responses from clients.
     */
    @JsonGetter("pixelMatchResponses")
    public Double getPixelMatchResponses ( ) { 
        return this.pixelMatchResponses;
    }
    
    /** SETTER
     * Average QPS for pixel match responses from clients.
     */
    @JsonSetter("pixelMatchResponses")
    public void setPixelMatchResponses (Double value) { 
        this.pixelMatchResponses = value;
        notifyObservers(this.pixelMatchResponses);
    }
 
    /** GETTER
     * The configured quota limits for this account.
     */
    @JsonGetter("quotaConfiguredLimit")
    public Double getQuotaConfiguredLimit ( ) { 
        return this.quotaConfiguredLimit;
    }
    
    /** SETTER
     * The configured quota limits for this account.
     */
    @JsonSetter("quotaConfiguredLimit")
    public void setQuotaConfiguredLimit (Double value) { 
        this.quotaConfiguredLimit = value;
        notifyObservers(this.quotaConfiguredLimit);
    }
 
    /** GETTER
     * The throttled quota limits for this account.
     */
    @JsonGetter("quotaThrottledLimit")
    public Double getQuotaThrottledLimit ( ) { 
        return this.quotaThrottledLimit;
    }
    
    /** SETTER
     * The throttled quota limits for this account.
     */
    @JsonSetter("quotaThrottledLimit")
    public void setQuotaThrottledLimit (Double value) { 
        this.quotaThrottledLimit = value;
        notifyObservers(this.quotaThrottledLimit);
    }
 
    /** GETTER
     * The trading location of this data.
     */
    @JsonGetter("region")
    public String getRegion ( ) { 
        return this.region;
    }
    
    /** SETTER
     * The trading location of this data.
     */
    @JsonSetter("region")
    public void setRegion (String value) { 
        this.region = value;
        notifyObservers(this.region);
    }
 
    /** GETTER
     * The number of properly formed bid responses received by our servers within the deadline.
     */
    @JsonGetter("successfulRequestRate")
    public Double getSuccessfulRequestRate ( ) { 
        return this.successfulRequestRate;
    }
    
    /** SETTER
     * The number of properly formed bid responses received by our servers within the deadline.
     */
    @JsonSetter("successfulRequestRate")
    public void setSuccessfulRequestRate (Double value) { 
        this.successfulRequestRate = value;
        notifyObservers(this.successfulRequestRate);
    }
 
    /** GETTER
     * The unix timestamp of the starting time of this performance data.
     */
    @JsonGetter("timestamp")
    public String getTimestamp ( ) { 
        return this.timestamp;
    }
    
    /** SETTER
     * The unix timestamp of the starting time of this performance data.
     */
    @JsonSetter("timestamp")
    public void setTimestamp (String value) { 
        this.timestamp = value;
        notifyObservers(this.timestamp);
    }
 
    /** GETTER
     * The number of bid responses that were unsuccessful due to timeouts, incorrect formatting, etc.
     */
    @JsonGetter("unsuccessfulRequestRate")
    public Double getUnsuccessfulRequestRate ( ) { 
        return this.unsuccessfulRequestRate;
    }
    
    /** SETTER
     * The number of bid responses that were unsuccessful due to timeouts, incorrect formatting, etc.
     */
    @JsonSetter("unsuccessfulRequestRate")
    public void setUnsuccessfulRequestRate (Double value) { 
        this.unsuccessfulRequestRate = value;
        notifyObservers(this.unsuccessfulRequestRate);
    }
 
}
 