/*
 * TestFlags
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */
package com.example;

import com.example.controllers.*;
import com.example.http.client.HttpClient;

public class TestFlagsClient {
    /**
     * Singleton access to Helloworld controller
     * @return	Returns the HelloworldController instance 
     */
    public HelloworldController getHelloworld() {
        return HelloworldController.getInstance();
    }

    /**
     * Singleton access to OAuthAuthorization controller
     * @return	Returns the OAuthAuthorizationController instance 
     */
    public OAuthAuthorizationController getOAuthAuthorization() {
        return OAuthAuthorizationController.getInstance();
    }

    /**
     * Get the shared http client currently being used for API calls
     * @return The http client instance currently being used
     */
    public HttpClient getSharedHttpClient() {
        return BaseController.getClientInstance();
    }
    
    /**
     * Set a shared http client to be used for API calls
     * @param httpClient The http client to use
     */
    public void setSharedHttpClient(HttpClient httpClient) {
        BaseController.setClientInstance(httpClient);
    }

    /**
     * Get authentication manager
     */
    public OAuthManager auth() {
        return OAuthManager.getInstance();
    }

    /**
     * Default constructor 
     */     
    public TestFlagsClient() {
    }

    /**
     * Client initialization constructor 
     */     
    public TestFlagsClient(String mnew, String n8888REWVGVFGF, String oAuthClientId, String oAuthClientSecret, String oAuthRedirectUri) {
        this();
        Configuration.mnew = mnew;
        Configuration.n8888REWVGVFGF = n8888REWVGVFGF;
        Configuration.oAuthClientId = oAuthClientId;
        Configuration.oAuthClientSecret = oAuthClientSecret;
        Configuration.oAuthRedirectUri = oAuthRedirectUri;
    }
}