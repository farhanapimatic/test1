<?php
/*
 * HelloWorldLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

namespace HelloWorldLib\Tests;

use HelloWorldLib\APIException;
use HelloWorldLib\Exceptions;
use HelloWorldLib\APIHelper;
use HelloWorldLib\Models;

class HelloworldControllerTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var \HelloWorldLib\Controllers\HelloworldController Controller instance
     */
    protected static $controller;

    /**
     * @var HttpCallBackCatcher Callback
     */
    protected $httpResponse;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass()
    {
        $client = new \HelloWorldLib\HelloWorldClient();
        self::$controller = $client->getHelloworld();
    }

    /**
     * Setup test
     */
    protected function setUp()
    {
        $this->httpResponse = new HttpCallBackCatcher();
    }

    /**
     * Testcase for testing endpoint Helloworld
     */
    public function testHelloworld1()
    {

        // Set callback and perform API call
        $result = null;
        self::$controller->setHttpCallBack($this->httpResponse);
        try {
            $result = self::$controller->getHelloworld();
        } catch (APIException $e) {
        }

        // Test response code
        $this->assertEquals(
            200,
            $this->httpResponse->getResponse()->getStatusCode(),
            "Status is not 200"
        );

        // Test whether the captured response is as we expected
        $this->assertNotNull($result, "Result does not exist");

        $this->assertEquals(
            '{  "message": "Hello world"}',
            $this->httpResponse->getResponse()->getRawBody(),
            "Response body does not match exactly"
        );
    }
}
